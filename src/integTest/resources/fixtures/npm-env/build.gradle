plugins {
    id "nebula.node"
}

node {
    download = true
    workDir = file("build/node")
}

task env(type: NpmTask) {
    dependsOn npmInstall
    npmCommand = ["run", "printenv"]
    outputs.upToDateWhen {
        true
    }
}

// This should be documented in the package.json file but it cannot be done because JSON does not accept comments.
// npm run forces the current directory but we can read the INIT_CWD environment variable to get the original working
// directory. This is the reason why we read the INIT_CWD variable and not the process.cwd() one in the script
// definition.
task pwd(type: NpmTask) {
    dependsOn npmInstall
    npmCommand = ["run", "printcwd"]
    outputs.upToDateWhen {
        true
    }
}

task version(type: NpmTask) {
    dependsOn npmInstall
    npmCommand = ["--version"]
}

if (isPropertyEnabled("customEnv")) {
    env.environment = [CUSTOM: "custom value"]
}

if (isPropertyEnabled("ignoreExitValue")) {
    env.ignoreExitValue = true
}

if (isPropertyEnabled("notExistingCommand")) {
    env.npmCommand = ["notExistingCommand"]
}

if (isPropertyEnabled("customWorkingDir")) {
    pwd.workingDir = file("${project.layout.buildDirectory.getAsFile().get()}/customWorkingDirectory/")
}

def isPropertyEnabled(name) {
    def property = System.properties[name]
    return property == "true"
}
